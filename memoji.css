body {
    background-color: #cfd0cf;
    margin: 0;
    border: 0;
    padding: 0;
    color: #434344;

}

.header {
    display: flex;
    justify-content: center;
    margin: 40px auto;
    font: bold 42px/47px Arial;

}

.playground {
    perspective: 600px;
}


.row {
    display: flex;
    flex-direction: row;
    justify-content: center;
}


.card {
    width: 120px;
    height: 120px;
    margin: 0 25px 25px 0;

    border: solid #fff 5px;
    border-radius: 9px;
    box-shadow: -1px -1px 5px rgba(0, 0, 0, 0.5);

    background: linear-gradient(45deg, #22ab93, #19668d);

    z-index: 10;
    cursor: pointer;

    transition-delay: 0.2s; /* чтобы граница не красилась сразу и не мешала интриге */
}


.card.correct {
    border-color: #5ad66f;
}

.card.incorrect {
    border-color: #f44336;
}



.front {
    z-index: 9;
    display: flex;

    position: absolute;

    height: inherit;
    width: inherit;

    justify-content: center;
    align-items: center;


    transition: background-color 0.5s, opacity 0.2s;

    background-color: inherit;
    opacity: 0;

}


.front.opened {
    transition: all 0.25s;
    transition-delay: 0.2s;
    opacity: 1;

    background-color: white;
}

.front.correct {
    background-color: #5ad66f;

}

.front.incorrect {
    background-color: #f44336;
}



@keyframes rotateCard {
    100% {transform: rotateY(180deg);}
}

.rotate-card {
    animation: rotateCard;
    animation-duration: 0.5s;
    animation-direction: alternate;
    animation-fill-mode: forwards;

}


@keyframes rotateCardReverse {
    0% {transform: rotateY(180deg);}
}

.rotate-reverse {
    animation: rotateCardReverse;
    animation-duration: 0.5s;
    animation-direction: alternate;
    animation-fill-mode: forwards;

/*
    чтобы граница красилась обратно в белый, даже пока еще стоит класс correct/incorrect
    это нужно в конце игры
*/

    border-color: white !important;
}

.timer {
    font: bold 32px/36px Arial;
    margin-top: 5px;
    width: inherit;
    display: flex;
    justify-content: center;
}



.modal {
    display: none;
    position: absolute;

    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    justify-content: center;
    align-items: center;

    background-color: black;
    opacity: 0.8;

    z-index: 50;
}



.modal.show-modal {
    display: flex;
}

.form-wrapper {
    position: absolute;
    display: none;


    height: 70%;
    width: 100%;
    justify-content: center;
    align-items: center;
}


.form-wrapper.show-form {
    display: flex;
}


.form {
    display: flex;

    flex-direction: column;

    justify-content: center;
    align-items: center;

    font: bold 70px Arial;
    min-width: 350px;
    height: 30%;

    background-color: white;

    z-index: 60;
}


.form-button {
     display: flex;
     align-items: center;
     justify-content: center;

     font: bold 20px Arial;
     color: white;
     background: linear-gradient(to left, #22ab93, #19668d);
     height: 40px;
     width: 150px;

     border-radius: 10px;
     margin-top: 40px;

     box-shadow: 1px 1px 1px rgba(0,0,0,0.5);
     cursor: pointer;
}


.form-button:active {
    box-shadow: inset 1px 1px 1px rgba(0,0,0,0.5);
}


/* анимация букв! */

.text span {
    position: relative;
    top: 20px;
    display: inline-block;
    animation: bounce .3s ease infinite alternate;

    text-shadow: 0 1px 0 #CCC,
    0 2px 0 #CCC,
    0 3px 0 #CCC,
    0 4px 0 #CCC,
    0 5px 0 #CCC,
    0 6px 0 transparent,
    0 7px 0 transparent,
    0 8px 0 transparent,
    0 9px 0 transparent,
    0 10px 10px rgba(0, 0, 0, .4);
}


.text span:nth-child(2) {
    animation-delay: .1s;
}
.text span:nth-child(3) {
    animation-delay: .2s;
}
.text span:nth-child(4) {
    animation-delay: .3s;
}

@keyframes bounce {
    100% {
        top: -20px;
        text-shadow: 0 1px 0 #CCC,
        0 2px 0 #CCC,
        0 3px 0 #CCC,
        0 4px 0 #CCC,
        0 5px 0 #CCC,
        0 6px 0 #CCC,
        0 7px 0 #CCC,
        0 8px 0 #CCC,
        0 9px 0 #CCC,
        0 50px 25px rgba(0, 0, 0, .2);
    }
}